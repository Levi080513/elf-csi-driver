# Default values for csi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

rbac:
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true

# Container Orchestration system (eg. "kubernetes"/"openshift" )
co: "kubernetes"
coVersion: "1.18"

# Create a StorageClass with the fullname of the chart
storageClass:
  # with `true` to create StorageClass
  create: true
  # with `true` to mark this StorageClass as default
  # more default StorageClass detail: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
  default: false
  # override the default name
  nameOverride: "elf"
  # default parameters for StorageClass
  parameters:
    csi.storage.k8s.io/fstype: "ext4"
    replicaFactor: "3"
    thinProvision: "false"
    clusterId: ""

  reclaimPolicy: Retain
  volumeBindingMode: Immediate
  allowVolumeExpansion: true

driver:
  image:
    repository: "registry.smtx.io/elf/csi-driver"
    tag: ""
    pullPolicy: IfNotPresent
  # The unique csi driver name in a kubernetes cluster.
  nameOverride: ""
  # kubernetes-cluster-idme
  clusterID: "my-cluster"
  # CloudTower Server
  cloudtowerServer:
    secretRef:
      name: cloudtower-server
  cloudTowerServer: ""
  cloudTowerAuthMode: ""
  cloudTowerUsername: ""
  cloudTowerPassword: ""

  controller:
    # controller replicas
    replicas: 3
    # use hostNetwork to access IOMesh cluster
    hostNetwork: true
    # nodeSelector of csi-controller-plugin Pod
    nodeSelector: {}
    # affinity of csi-controller-plugin Pod
    affinity: {}
    driver:
      # driver ports(If hostNetwork is true, ports are host ports)
      ports:
        health: 9910
    resources:
      limits:
        cpu: 100m
        memory: 150Mi
      requests:
        cpu: 100m
        memory: 150Mi

  node:
    # nodeSelector of csi-node-plugin Pod
    nodeSelector: {}
    # affinity of csi-node-plugin Pod
    affinity: {}
    driver:
      # host ports
      ports:
        health: 9911
        liveness: 9912
      # kubelet root directory
      kubeletRootDir: "/var/lib/kubelet"
    resources:
      limits:
        cpu: 100m
        memory: 150Mi
      requests:
        cpu: 100m
        memory: 150Mi

sidecar:
  registry: "registry.smtx.io/kubesmart/iomesh"

  resources:
    driver_registrar:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 100m
        memory: 50Mi

    liveness_probe:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 100m
        memory: 50Mi

    csi_provisioner:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 100m
        memory: 50Mi

    csi_snapshotter:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 100m
        memory: 50Mi

    csi_attacher:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 100m
        memory: 50Mi

    csi_resizer:
      limits:
        cpu: 100m
        memory: 50Mi
      requests:
        cpu: 100m
        memory: 50Mi
